<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hy.blog.dao.TypeDAO">

    <resultMap id="type" type="com.hy.blog.entity.Type">
        <id property="id" column="tid"/>
        <result property="name" column="name"/>
        <collection property="blogs" ofType="com.hy.blog.entity.Blog">
            <id property="id" column="bid"/>
            <result property="title" column="title"/>
            <result property="typeId" column="type_id"/>
        </collection>
    </resultMap>

    <select id="findBlogType" resultMap="type">
        select
            t.id tid    ,
            t.name      ,
            b.id bid    ,
            b.title     ,
            b.type_id
        from t_type t   ,
             t_blog b
        where t.id = b.type_id
        and   b.published = 1
    </select>

    <select id="findByTypeId" resultMap="type" parameterType="java.lang.Long">
        select
            t.id tid    ,
            t.name      ,
            b.id bid    ,
            b.title     ,
            b.type_id
        from t_type t   ,
             t_blog b
        where t.id = b.type_id
        and   b.published = 1
        and   t.id = #{typeId}
    </select>

    <select id="findHomeType" resultType="com.hy.blog.vo.DataStringValue">
        select
            tt.id       ,
            tt.name     ,
            count(tt.id) value
        from t_blog tb  ,
             t_type tt
        where tb.type_id = tt.id
        group by tt.id
        order by value desc
        limit 5
    </select>

    <select id="findAllType" resultType="com.hy.blog.vo.DataStringValue">
        select
            tt.id       ,
            tt.name     ,
            count(tt.id) value
        from t_blog tb  ,
             t_type tt
        where tb.type_id = tt.id
        group by tt.id
        order by value desc
    </select>

</mapper>